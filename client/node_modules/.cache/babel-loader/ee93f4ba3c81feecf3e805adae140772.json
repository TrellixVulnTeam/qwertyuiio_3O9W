{"ast":null,"code":"var _jsxFileName = \"/home/hennadiishavlo/projects/blog-redux-saga/dikuha/client/src/components/pagination/states.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport Posts from './Posts';\nimport connect from 'react-redux/es/connect/connect';\nimport Pagination from './Pagination';\nimport axios from \"axios\";\nimport { getPostsAction } from '../../actions/actionCreator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = ({\n  posts,\n  getPostsAction\n}) => {\n  _s();\n\n  //const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true); //const res = await axios.get('https://jsonplaceholder.typicode.com/posts');\n\n      getPostsAction(); // console.log(res.data)\n      // setPosts(res.data);\n\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []);\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-primary mb-3\",\n      children: \"Blog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Posts, {\n      posts: currentPosts,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      postsPerPage: postsPerPage,\n      totalPosts: posts.length,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"PbGQiquh74hC4L/o06oleNxX4no=\");\n\n_c = App;\n\nconst mapDispatchToProps = dispatch => ({\n  getPostsAction: data => dispatch(getPostsAction(data))\n});\n\nconst mapStateToProps = state => {\n  const {\n    posts\n  } = state.postsReducer;\n  return {\n    posts\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/hennadiishavlo/projects/blog-redux-saga/dikuha/client/src/components/pagination/states.js"],"names":["React","useState","useEffect","Posts","connect","Pagination","axios","getPostsAction","App","posts","loading","setLoading","currentPage","setCurrentPage","postsPerPage","fetchPosts","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","length","mapDispatchToProps","dispatch","data","mapStateToProps","state","postsReducer"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,cAAR,QAA6B,6BAA7B;;;AACA,MAAMC,GAAG,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQF,EAAAA;AAAR,CAAD,KAA6B;AAAA;;AACrC;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACa,YAAD,IAAiBb,QAAQ,CAAC,EAAD,CAA/B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,UAAU,GAAG,YAAY;AAC3BJ,MAAAA,UAAU,CAAC,IAAD,CAAV,CAD2B,CAE3B;;AACAJ,MAAAA,cAAc,GAHa,CAI3B;AACA;;AACAI,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAPD;;AASAI,IAAAA,UAAU;AACb,GAXQ,EAWN,EAXM,CAAT;AAaA,QAAMC,eAAe,GAAGJ,WAAW,GAAGE,YAAtC;AACA,QAAMG,gBAAgB,GAAGD,eAAe,GAAGF,YAA3C;AACA,QAAMI,YAAY,GAAGT,KAAK,CAACU,KAAN,CAAYF,gBAAZ,EAA8BD,eAA9B,CAArB;;AAGA,QAAMI,QAAQ,GAAGC,UAAU,IAAIR,cAAc,CAACQ,UAAD,CAA7C;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEH,YAAd;AAA4B,MAAA,OAAO,EAAER;AAArC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,UAAD;AACI,MAAA,YAAY,EAAEI,YADlB;AAEI,MAAA,UAAU,EAAEL,KAAK,CAACa,MAFtB;AAGI,MAAA,QAAQ,EAAEF;AAHd;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CArCD;;GAAMZ,G;;KAAAA,G;;AAuCN,MAAMe,kBAAkB,GAAIC,QAAD,KAAe;AACtCjB,EAAAA,cAAc,EAAGkB,IAAD,IAAUD,QAAQ,CAACjB,cAAc,CAACkB,IAAD,CAAf;AADI,CAAf,CAA3B;;AAIA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,QAAM;AAAElB,IAAAA;AAAF,MAAYkB,KAAK,CAACC,YAAxB;AACA,SAAO;AACHnB,IAAAA;AADG,GAAP;AAGH,CALD;;AAOA,eAAeL,OAAO,CAACsB,eAAD,EAAiBH,kBAAjB,CAAP,CAA4Cf,GAA5C,CAAf","sourcesContent":["import React from 'react'\nimport {useState, useEffect} from \"react\";\nimport Posts from './Posts';\nimport connect from 'react-redux/es/connect/connect'\nimport Pagination from './Pagination'\nimport axios from \"axios\";\nimport {getPostsAction} from '../../actions/actionCreator';\nconst App = ({posts, getPostsAction}) => {\n    //const [posts, setPosts] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [postsPerPage] = useState(10);\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            setLoading(true);\n            //const res = await axios.get('https://jsonplaceholder.typicode.com/posts');\n            getPostsAction();\n            // console.log(res.data)\n            // setPosts(res.data);\n            setLoading(false);\n        };\n\n        fetchPosts();\n    }, []);\n\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n\n    const paginate = pageNumber => setCurrentPage(pageNumber)\n\n\n    return (\n        <div className='container mt-5'>\n            <h1 className=\"text-primary mb-3\">Blog</h1>\n            <Posts posts={currentPosts} loading={loading}/>\n            <Pagination\n                postsPerPage={postsPerPage}\n                totalPosts={posts.length}\n                paginate={paginate}/>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    getPostsAction: (data) => dispatch(getPostsAction(data)),\n});\n\nconst mapStateToProps = (state) => {\n    const { posts } = state.postsReducer;\n    return {\n        posts\n    }\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}